Phase 1:
Sensor - Debian OS on ARM Platform (plain QEMU)
Phone - Android Emulator (Target API 22)
Server - Ubuntu Server OS on x86 Platform (plain QEMU) 

Steps to perform Phase 1 (in Terminal Window):

1) Set the correct paths in paths.sh

2) Download necessary images and files.
Run: ./download.sh

3) Install GreenSocs and SystemC Tools
Run: ./install_tools.sh

3) Open new terminal window and launch sensor QEMU
Run: ./launch_sensor.sh

4) Open new terminal window and launch telnet to access the sensor VM (Must be done within 7 seconds of launching the sensor QEMU)
Run: telnet 127.0.0.1 1236

5) Open new terminal window and launch Android emulator
Run: ./launch_phone.sh

6) Open new terminal window and launch server QEMU
Run: ./launch_server.sh

7) Open new terminal window
Run: ./start_watcher.sh

8) Once the Android emulator is up and running
Edit ssh.txt and enter the username and password of your host machine
1st line is username.
2nd line is password.
Make sure you don't press enter after the 2nd line.

9) In terminal window
Run: ./send_ssh_creds.sh
This will transfer the ssh.txt file to the Android device so that our application can access it.

10) Blog
Open Lifelogs application in Android Emulator, Hit Blog Button
Then you need to manually run the following commands on the Sensor VM and Host
(i) In Guest VM: shineenc /usr/share/test.wav test.mp3
(ii )In Guest VM: converter
In Host, open new terminal and run: 
(iii) cd <YOUR_PHASE2_DIR>/tmp
(iv) nc 127.0.0.1 1237 > compress.txt
(v) In Guest VM: cat compress.txt > /dev/ttySAC1
(vi) Once the "#" prompt appears on guest VM, it implies that transfer is complete. Go to the terminal window from which you ran "nc ..." and press Ctrl-C to terminate.
(vii) Run: nano <YOUR_PHASE2_DIR>/tmp/compress.txt and remove the ^@ (escape character) at the beginning of the file (pressing backspace or delete only once will remove it). Then, Ctrl-O and Ctrl-X to save and quit.
(viii) Run: python convert.py
(ix) Run: ./blog_step2.sh
Host will send the MP3 file to Android and the server. At this time, the Android application will update itself with the location and audio file. Tap on the marker to interact with it. Host will also retrieve the tags from server and send it to Android. At this time, hitting "Auto-Tag?" in the application will display the tags

8) Search
Open Lifelogs application in Android Emulator, Hit Search Button and enter keyword
This will perform the following steps - 
(i) Get keyword file from Android to host
(ii) Send keyword file to server
(iii) Retrieve relevant metadata from server to host
(iv) Send metadata from host to Android
